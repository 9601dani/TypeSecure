/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.danimo.frames;

import static com.danimo.Main.CONTADOR;
import com.danimo.objects.NumeroLinea;
import java.awt.Color;
import java.awt.font.NumericShaper;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author danimo
 */
public class EditorVIew extends javax.swing.JFrame {
    /**
     * Creates new form EditorVIew
     */
    public EditorVIew() {
        initComponents();
        this.setLocationRelativeTo(null);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        nuevo_tab = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Editor Daniel");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(250, 250));

        jMenu1.setText("File");

        nuevo_tab.setText("Nuevo Archivo");
        nuevo_tab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevo_tabActionPerformed(evt);
            }
        });
        jMenu1.add(nuevo_tab);

        jMenuItem1.setText("Cerrar Archivo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Abrir Archivo");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem2.setText("Guardar Como..");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setText("Guardar");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1462, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 818, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuevo_tabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevo_tabActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.add("nuevo archivo"+CONTADOR++,new EditorPanel("",""));
    }//GEN-LAST:event_nuevo_tabActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        int indexPanelSeleccionado = jTabbedPane1.getSelectedIndex();
            if (indexPanelSeleccionado != -1) { // Si hay un panel seleccionado
                jTabbedPane1.removeTabAt(indexPanelSeleccionado);
                CONTADOR= indexPanelSeleccionado;
            } else {
                JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún panel.");
            }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:

        int indexPanelSeleccionado = jTabbedPane1.getSelectedIndex();

        if (indexPanelSeleccionado != -1) { // Si hay un panel seleccionado
            EditorPanel selectedPanel = (EditorPanel) jTabbedPane1.getSelectedComponent();
            System.out.println("seleecion: " + indexPanelSeleccionado);
// Obtener una referencia al JScrollPane que contiene el JTextArea
            JScrollPane scrollPane = (JScrollPane) selectedPanel.getComponent(0);

// Obtener una referencia al JTextArea dentro del JScrollPane
            JTextArea textAreaInView = (JTextArea) scrollPane.getViewport().getView();

// Obtener el contenido completo del JTextArea
            String text = selectedPanel.getjTextArea1().getText();
            JFileChooser fileChooser = new JFileChooser();
            int seleccion = fileChooser.showSaveDialog(new JFrame());

            if (seleccion == JFileChooser.APPROVE_OPTION) {
                try {
                    File file = fileChooser.getSelectedFile();
                    String filePath = file.getAbsolutePath();
                    BufferedWriter writer = new BufferedWriter(new FileWriter(fileChooser.getSelectedFile()));
                    writer.write(text);
                    writer.close();
                    selectedPanel.currentFilePath=file.getAbsolutePath();
                    JOptionPane.showMessageDialog(null, "El índice del panel seleccionado se guardó en el archivo.");
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "Error al guardar el índice del panel seleccionado en el archivo.");
                    e.printStackTrace();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ningún panel para guardar.");
        }

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de texto", "txt", "ts", " ");
        fileChooser.setFileFilter(filter);
        int seleccion = fileChooser.showOpenDialog(new JFrame());

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
             String contenido = "";
            try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
                String line;
                
                while ((line = reader.readLine()) != null) {
                    contenido+=(line + "\n");
                } 
                jTabbedPane1.add(file.getName(),new EditorPanel(contenido, file.getAbsolutePath()));
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        this.guardarArchivo();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void guardarArchivo() {
        int indexPanelSeleccionado = jTabbedPane1.getSelectedIndex();
        if (indexPanelSeleccionado != -1) { // Si hay un panel seleccionado
            EditorPanel selectedPanel = (EditorPanel) jTabbedPane1.getSelectedComponent();
            String variable = selectedPanel.currentFilePath;
/*            JScrollPane scrollPane = (JScrollPane) selectedPanel.getComponent(0);
// Obtener una referencia al JTextArea dentro del JScrollPane
            JTextArea textAreaInView = (JTextArea) scrollPane.getViewport().getView();
            System.out.println(textAreaInView);
            System.out.println(textAreaInView.getText());
// Obtener el contenido completo del JTextArea
            if(textAreaInView== selectedPanel.getjTextArea1()){*/
                String text = selectedPanel.getjTextArea1().getText();
                if (variable != null && variable!="") {
                    // El archivo ya ha sido guardado anteriormente, guardar los cambios
                    try (BufferedWriter writer = new BufferedWriter(new FileWriter(variable))) {
                        writer.write(text);
                        JOptionPane.showMessageDialog(null, "Se guardo correctamente");
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                } else {
                    // El archivo no ha sido guardado anteriormente, pedir una ubicación para guardarlo
                    JFileChooser fileChooser = new JFileChooser();
                    int seleccion = fileChooser.showSaveDialog(this);

                    if (seleccion == JFileChooser.APPROVE_OPTION) {
                        // Obtener la ruta del archivo seleccionado
                        File file = fileChooser.getSelectedFile();
                        String filePath = file.getAbsolutePath();

                        // Guardar la ruta del archivo
                        variable = filePath;
                        selectedPanel.currentFilePath=variable;

                        // Guardar el contenido del JTextArea en el archivo
                        try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath+".ts"))) {
                            writer.write(text);
                            jTabbedPane1.setTitleAt(indexPanelSeleccionado,file.getName());
                            JOptionPane.showMessageDialog(null, "Se guardo correctamente");
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    }
                }

            /*}*/
        } else {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ningún panel para guardar.");
        }


}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    public static javax.swing.JTabbedPane jTabbedPane1;
    public static javax.swing.JMenuItem nuevo_tab;
    // End of variables declaration//GEN-END:variables
}
